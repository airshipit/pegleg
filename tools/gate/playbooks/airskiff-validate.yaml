# Copyright 2019, AT&T Intellectual Property
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: primary
  roles:
    - clear-firewall
    - bindep
    - disable-systemd-resolved
    - ensure-python
    - ensure-pip
    - ensure-docker

  tasks:

    - name: Install Packaging python module for tools/airship
      block:
        - pip:
            name: packaging
            version: 23.1
            executable: pip3
      become: True

    - name: Clone Required Repositories
      shell: |
        export CLONE_PEGLEG={{ CLONE_PEGLEG }}
        export OSH_INFRA_COMMIT={{ HTK_COMMIT }}
        ./tools/deployment/airskiff/developer/000-clone-dependencies.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"

    - name: Setup Apparmor
      shell: |
        ./tools/deployment/airskiff/developer/009-setup-apparmor.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"

    - name: Deploy Kubernetes with Minikube
      shell: |
        ./tools/deployment/airskiff/developer/010-deploy-k8s.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"


    - name: Build all charts locally
      shell: |
        set -ex
        ./tools/deployment/airskiff/developer/015-make-all-charts.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Build Pegleg with submitted changes
      shell: |
        set -ex
        export DISTRO={{ PEGLEG_IMAGE_DISTRO }}
        make images
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: yes


    - name: Use locally built images in manifests
      shell: |
        set -ex
        docker rm registry --force || true
        docker run -d -p 5000:5000 --restart=always --name registry registry:2
        docker tag quay.io/airshipit/pegleg:latest-ubuntu_focal localhost:5000/pegleg:latest-ubuntu_focal
        docker push localhost:5000/pegleg:latest-ubuntu_focal
        sed -i "s#quay.io/airshipit/pegleg:latest-ubuntu_focal#localhost:5000/pegleg:latest-ubuntu_focal#g" ./global/software/config/versions.yaml
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Start artifactory
      shell: |
        set -ex
        # start http server with artifacts
        docker rm artifacts --force || true
        docker run --name artifacts -p 8282:80 -v $(pwd)/../artifacts:/usr/share/nginx/html -d nginx
        sleep 10
        curl --verbose -I http://control-plane.minikube.internal:8282/memcached.tgz
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: List sites
      shell: |
        set -xe
        ./tools/airship pegleg --verbose site    -r . list
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Lint Airskiff site
      shell: |
        set -xe
        ./tools/airship pegleg --verbose site    -r . lint airskiff -w P001 -w P003
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Validate Airskiff site
      shell: |
        set -xe
        ./tools/airship pegleg --verbose site    -r . render  airskiff --validate
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Render Airskiff site
      shell: |
        set -xe
        ./tools/airship pegleg  --verbose site -r . render airskiff -o airskiff.yaml
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Show Airskiff site
      shell: |
        set -xe
        ./tools/airship pegleg  --verbose site -r . show airskiff
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Collect Airskiff site
      shell: |
        set -xe
        ./tools/airship pegleg  --verbose site -r . collect airskiff -s peggles
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Stop artifactory
      shell: |
        set -ex
        # terminate artifactory
        docker rm artifacts --force || true
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: yes
